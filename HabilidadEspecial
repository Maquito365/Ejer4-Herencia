public class HabilidadEspecial{
    private String nombre;
    private String efecto;
    private int valor;
    private int duracion;

    public HabilidadEspecial(String nombre, String efecto, int valor, int duracion){
        this.nombre = nombre;
        this.efecto = normalizar(efecto);
        this.valor = valor;
        this.duracion = duracion;
    }

    public String getNombre() {
        return nombre;
    }
    public String getEfecto() {
        return efecto;
    }
    public int getValor() {
        return valor;
    }
    public int getDuracion() {
        return duracion;
    }
    //normalización para que "Aumentar Ataque", "aumentoATQ", "aumentarataque" funcionen igual
    private static String normalizar(String s){
        String t = s == null ? "" : s.trim().toLowerCase();
        t = Normalizer.normalize(t, Normalizer.Form.NFD).replaceAll("\\p{M}", ""); // quita acentos
        t = t.replaceAll("\\s+", ""); // quita espacios
        return t;
    }
    //Método de los enemigos para aplicar efectos a los jugadores
    public void aplicarHabilidad(Combatientes objetivo){
        switch(efecto){
            case "envenenar":
                objetivo.aplicarVeneno(valor, duracion);
                break;

            case "inhabilitar":
                objetivo.setInhabilitadoPorTurnos(duracion);
                System.out.println(objetivo.getNombre() + " ha sido inhabilitado por " + duracion + " turno(s).");
                break;

            case "aumentoatq":
            case "aumentarataque": // alias aceptado
                objetivo.aplicarAumentoAtaque(valor);
                break;

            case "escudo":
                objetivo.activarEscudo(valor);
                break;

            default:
                System.out.println("Habilidad no existente (" + efecto + ")");
        }   
    }
    //Otro tipo de habilidad para aplicar a múltiples objetivos
    public void aplicarHabilidadMultiple(Combatientes [] objetivos){
        if(efecto.equals("danarmultiple")){
            for(Combatientes objetivo : objetivos){
                objetivo.recibirDano(valor); 
                System.out.println(objetivo.getNombre() + " recibe " + valor + " de daño múltiple.");
            }
        } else {
            System.out.println("Esta habilidad no es de daño múltiple (" + efecto + ")");
        }
    }
    // Método toString para representar el objeto como una cadena
    @Override
    public String toString(){
        return "HabilidadEspecial{" +
                "nombre='" + nombre + '\'' +
                ", efecto='" + efecto + '\'' +
                ", valor=" + valor +
                ", duracion=" + duracion +
                '}';
    }
}