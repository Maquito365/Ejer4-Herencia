public Class Combatientes{
    private String nombre;
    private int PV;
    private int PA;
    private boolean inhabilitado;
    private int aumentoAtaque;
    private int escudoActivo;
    private boolean turnoExtra;

    public Combatientes(String nombre){
        this.nombre = nombre;
        this.PV = 100;
        this.PA = 20;
        this.inhabilitado = false;
        this.aumentoAtaque = 0;
        this.escudoActivo = 0;
        this.turnoExtra = false;
    }

    public String getNombre(){
        return nombre;
    }
    public int getPV(){
        return PV;
    }
    public int getPA(){
        return PA + aumentoAtaque;
    }
    public boolean isInhabilitado(){
        return inhabilitado;
    }
    public void setInhabilitado(boolean inhabilitado){
        this.inhabilitado = inhabilitado;
    }
    public boolean tieneTurnoExtra(){
        return turnoExtra;
    }
    public void otorgarTurnoExtra(){
        this.turnoExtra = true;
    }
    public void usarTurnoExtra(){
        this.turnoExtra = false;
    }
    // Ayuda a ver cuanto daño recibe el combatiente, reduciendo los puntos de vida del mismo
    public void recibirDano(int dano){
        if (escudoActivo > 0){
           int danoReducido = Math.max(dano - escudoActivo, 0);// Math max ayuda a que el daño no sea negativo osea regresa el mayor entre los dos
           escudoActivo = 0;
           this.PV -= danoReducido;
           System.out.println(nombre + " ha recibido " + danoReducido + " tras la activación de su escudo " + PV);
        }else{
            this.PV -= dano; // Resta el daño directamente a los puntos de vida
            System.out.println(nombre + " ha recibido " + dano + " de daño. PV restantes: " + PV);
        }
        if (this.PV < 0) this.PV = 0; 
    }
    //Método de aumento de ataque 
    public void aplicarAumentoAtaque(int valor){
        this.aumentoAtaque += valor;
        System.out.println(nombre + " ha aumentado su ataque en " + valor + ". PA actual: " + getPA());
    }

    public void resetearAumentoAtaque(){
        this.aumentoAtaque =0; // resetea el aumento de ataque a 0, osea no tiene un aumento dle mismo
    }
    //activa el escudo del combatiente
    public void activarEscudo(int valor){
        this.escudoActivo = valor;
    }

    public void estaVivo(){
        return PV > 0;
    }
    // Muestra el estado actual del combatiente
    @Override
    public String toString() {
        return "Combatiente{" +
                "nombre='" + nombre + '\'' +
                ", PV=" + PV +
                ", PA=" + PA +
                '}';
    }
    // Método equals para comparar dos objetos Combatientes
    @Override
    public boolean equals(Object obj){
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Combatientes that = (Combatientes) obj; // Convierte el objeto a Combatientes
        return PV == that.PV && PA == that.PA && nombre.equals(that.nombre);// Compara los atributos para determinar si son iguales
    }
}